{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"config\"];import React from'react';import{LoggerProvider,GestureProvider}from'./contexts';import{ToastUI}from'./ToastUI';import{useToast}from'./useToast';import{jsx as _jsx}from\"react/jsx-runtime\";const ToastRoot=React.forwardRef((props,ref)=>{const{config}=props,defaultOptions=_objectWithoutPropertiesLoose(props,_excluded);const{show,hide,isVisible,options,data}=useToast({defaultOptions});React.useImperativeHandle(ref,React.useCallback(()=>({show,hide}),[hide,show]));return _jsx(ToastUI,{isVisible:isVisible,options:options,data:data,hide:hide,show:show,config:config});});let refs=[];function addNewRef(newRef){refs.push({current:newRef});}function removeOldRef(oldRef){refs=refs.filter(r=>r.current!==oldRef);}export function Toast(props){const toastRef=React.useRef(null);const setRef=React.useCallback(ref=>{if(ref){toastRef.current=ref;addNewRef(ref);}else{removeOldRef(toastRef.current);}},[]);return _jsx(LoggerProvider,{enableLogs:false,children:_jsx(GestureProvider,{children:_jsx(ToastRoot,Object.assign({ref:setRef},props))})});}function getRef(){const reversePriority=[...refs].reverse();const activeRef=reversePriority.find(ref=>ref?.current!==null);if(!activeRef){return null;}return activeRef.current;}Toast.show=params=>{getRef()?.show(params);};Toast.hide=params=>{getRef()?.hide(params);};","map":{"version":3,"names":["React","LoggerProvider","GestureProvider","ToastUI","useToast","jsx","_jsx","ToastRoot","forwardRef","props","ref","config","defaultOptions","_objectWithoutPropertiesLoose","_excluded","show","hide","isVisible","options","data","useImperativeHandle","useCallback","refs","addNewRef","newRef","push","current","removeOldRef","oldRef","filter","r","Toast","toastRef","useRef","setRef","enableLogs","children","Object","assign","getRef","reversePriority","reverse","activeRef","find","params"],"sources":["/Users/siva/Documents/GitHub/streakzilla/streakzilla/node_modules/react-native-toast-message/lib/src/Toast.js"],"sourcesContent":["import React from 'react';\nimport { LoggerProvider, GestureProvider } from './contexts';\nimport { ToastUI } from './ToastUI';\nimport { useToast } from './useToast';\nconst ToastRoot = React.forwardRef((props, ref) => {\n    const { config, ...defaultOptions } = props;\n    const { show, hide, isVisible, options, data } = useToast({\n        defaultOptions\n    });\n    // This must use useCallback to ensure the ref doesn't get set to null and then a new ref every render.\n    React.useImperativeHandle(ref, React.useCallback(() => ({\n        show,\n        hide\n    }), [hide, show]));\n    return (<ToastUI isVisible={isVisible} options={options} data={data} hide={hide} show={show} config={config}/>);\n});\nlet refs = [];\n/**\n * Adds a ref to the end of the array, which will be used to show the toasts until its ref becomes null.\n *\n * @param newRef the new ref, which must be stable for the life of the Toast instance.\n */\nfunction addNewRef(newRef) {\n    refs.push({\n        current: newRef\n    });\n}\n/**\n * Removes the passed in ref from the file-level refs array using a strict equality check.\n *\n * @param oldRef the exact ref object to remove from the refs array.\n */\nfunction removeOldRef(oldRef) {\n    refs = refs.filter((r) => r.current !== oldRef);\n}\nexport function Toast(props) {\n    const toastRef = React.useRef(null);\n    /*\n      This must use `useCallback` to ensure the ref doesn't get set to null and then a new ref every render.\n      Failure to do so will cause whichever Toast *renders or re-renders* last to be the instance that is used,\n      rather than being the Toast that was *mounted* last.\n    */\n    const setRef = React.useCallback((ref) => {\n        // Since we know there's a ref, we'll update `refs` to use it.\n        if (ref) {\n            // store the ref in this toast instance to be able to remove it from the array later when the ref becomes null.\n            toastRef.current = ref;\n            addNewRef(ref);\n        }\n        else {\n            // remove the this toast's ref, wherever it is in the array.\n            removeOldRef(toastRef.current);\n        }\n    }, []);\n    return (<LoggerProvider enableLogs={false}>\n      <GestureProvider>\n        <ToastRoot ref={setRef} {...props}/>\n      </GestureProvider>\n    </LoggerProvider>);\n}\n/**\n * Get the active Toast instance `ref`, by priority.\n * The \"highest\" Toast in the `View` hierarchy has the highest priority.\n *\n * For example, a Toast inside a `Modal`, would have had its ref set later than a Toast inside App's Root.\n * Therefore, the library knows that it is currently visible on top of the App's Root\n * and will thus use the `Modal`'s Toast when showing/hiding.\n *\n * ```js\n * <>\n *  <Toast />\n *  <Modal>\n *    <Toast />\n *  </Modal>\n * </>\n * ```\n */\nfunction getRef() {\n    const reversePriority = [...refs].reverse();\n    const activeRef = reversePriority.find((ref) => ref?.current !== null);\n    if (!activeRef) {\n        return null;\n    }\n    return activeRef.current;\n}\nToast.show = (params) => {\n    getRef()?.show(params);\n};\nToast.hide = (params) => {\n    getRef()?.hide(params);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}