{"ast":null,"code":"import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const GestureContext=React.createContext({panning:{current:false}});function GestureProvider({children,panning=false}){const panningRef=React.useRef(panning);const value={panning:panningRef};return _jsx(GestureContext.Provider,{value:value,children:children});}function useGesture(){const ctx=React.useContext(GestureContext);return ctx;}export{GestureProvider,useGesture};","map":{"version":3,"names":["React","jsx","_jsx","GestureContext","createContext","panning","current","GestureProvider","children","panningRef","useRef","value","Provider","useGesture","ctx","useContext"],"sources":["/Users/siva/Documents/GitHub/streakzilla/streakzilla/node_modules/react-native-toast-message/lib/src/contexts/GestureContext.js"],"sourcesContent":["import React from 'react';\nconst GestureContext = React.createContext({\n    panning: { current: false }\n});\nfunction GestureProvider({ children, panning = false }) {\n    const panningRef = React.useRef(panning);\n    const value = { panning: panningRef };\n    return (<GestureContext.Provider value={value}>{children}</GestureContext.Provider>);\n}\nfunction useGesture() {\n    const ctx = React.useContext(GestureContext);\n    return ctx;\n}\nexport { GestureProvider, useGesture };\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAC1B,KAAM,CAAAC,cAAc,CAAGH,KAAK,CAACI,aAAa,CAAC,CACvCC,OAAO,CAAE,CAAEC,OAAO,CAAE,KAAM,CAC9B,CAAC,CAAC,CACF,QAAS,CAAAC,eAAeA,CAAC,CAAEC,QAAQ,CAAEH,OAAO,CAAG,KAAM,CAAC,CAAE,CACpD,KAAM,CAAAI,UAAU,CAAGT,KAAK,CAACU,MAAM,CAACL,OAAO,CAAC,CACxC,KAAM,CAAAM,KAAK,CAAG,CAAEN,OAAO,CAAEI,UAAW,CAAC,CACrC,MAAQ,CAAAP,IAAA,CAACC,cAAc,CAACS,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAH,QAAA,CAAEA,QAAQ,CAA0B,CAAC,CACvF,CACA,QAAS,CAAAK,UAAUA,CAAA,CAAG,CAClB,KAAM,CAAAC,GAAG,CAAGd,KAAK,CAACe,UAAU,CAACZ,cAAc,CAAC,CAC5C,MAAO,CAAAW,GAAG,CACd,CACA,OAASP,eAAe,CAAEM,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}