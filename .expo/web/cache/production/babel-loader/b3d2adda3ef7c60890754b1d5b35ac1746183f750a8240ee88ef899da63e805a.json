{"ast":null,"code":"import React from'react';import{AnimatedContainer}from'./components/AnimatedContainer';import{ErrorToast}from'./components/ErrorToast';import{InfoToast}from'./components/InfoToast';import{SuccessToast}from'./components/SuccessToast';import{jsx as _jsx}from\"react/jsx-runtime\";const defaultToastConfig={success:props=>_jsx(SuccessToast,Object.assign({},props)),error:props=>_jsx(ErrorToast,Object.assign({},props)),info:props=>_jsx(InfoToast,Object.assign({},props))};function renderComponent({data,options,config,isVisible,show,hide}){const{text1,text2}=data;const{type,onPress,text1Style,text2Style,position,props}=options;const toastConfig=Object.assign({},defaultToastConfig,config);const ToastComponent=toastConfig[type];if(!ToastComponent){throw new Error(`Toast type: '${type}' does not exist. You can add it via the 'config' prop on the Toast instance. Learn more: https://github.com/calintamas/react-native-toast-message/blob/master/README.md`);}return ToastComponent({position,type,isVisible,text1,text2,text1Style,text2Style,show,hide,onPress,props});}export function ToastUI(props){const{isVisible,options,hide}=props;const{position,topOffset,bottomOffset,keyboardOffset,avoidKeyboard,swipeable}=options;return _jsx(AnimatedContainer,{isVisible:isVisible,position:position,topOffset:topOffset,bottomOffset:bottomOffset,keyboardOffset:keyboardOffset,avoidKeyboard:avoidKeyboard,swipeable:swipeable,onHide:hide,children:renderComponent(props)});}","map":{"version":3,"names":["React","AnimatedContainer","ErrorToast","InfoToast","SuccessToast","jsx","_jsx","defaultToastConfig","success","props","Object","assign","error","info","renderComponent","data","options","config","isVisible","show","hide","text1","text2","type","onPress","text1Style","text2Style","position","toastConfig","ToastComponent","Error","ToastUI","topOffset","bottomOffset","keyboardOffset","avoidKeyboard","swipeable","onHide","children"],"sources":["/Users/siva/Documents/GitHub/streakzilla/streakzilla/node_modules/react-native-toast-message/lib/src/ToastUI.js"],"sourcesContent":["import React from 'react';\nimport { AnimatedContainer } from './components/AnimatedContainer';\nimport { ErrorToast } from './components/ErrorToast';\nimport { InfoToast } from './components/InfoToast';\nimport { SuccessToast } from './components/SuccessToast';\nconst defaultToastConfig = {\n    success: (props) => <SuccessToast {...props}/>,\n    error: (props) => <ErrorToast {...props}/>,\n    info: (props) => <InfoToast {...props}/>\n};\nfunction renderComponent({ data, options, config, isVisible, show, hide }) {\n    const { text1, text2 } = data;\n    const { type, onPress, text1Style, text2Style, position, props } = options;\n    const toastConfig = {\n        ...defaultToastConfig,\n        ...config\n    };\n    const ToastComponent = toastConfig[type];\n    if (!ToastComponent) {\n        throw new Error(`Toast type: '${type}' does not exist. You can add it via the 'config' prop on the Toast instance. Learn more: https://github.com/calintamas/react-native-toast-message/blob/master/README.md`);\n    }\n    return ToastComponent({\n        position,\n        type,\n        isVisible,\n        text1,\n        text2,\n        text1Style,\n        text2Style,\n        show,\n        hide,\n        onPress,\n        props\n    });\n}\nexport function ToastUI(props) {\n    const { isVisible, options, hide } = props;\n    const { position, topOffset, bottomOffset, keyboardOffset, avoidKeyboard, swipeable } = options;\n    return (<AnimatedContainer isVisible={isVisible} position={position} topOffset={topOffset} bottomOffset={bottomOffset} keyboardOffset={keyboardOffset} avoidKeyboard={avoidKeyboard} swipeable={swipeable} onHide={hide}>\n      {renderComponent(props)}\n    </AnimatedContainer>);\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,iBAAiB,KAAQ,gCAAgC,CAClE,OAASC,UAAU,KAAQ,yBAAyB,CACpD,OAASC,SAAS,KAAQ,wBAAwB,CAClD,OAASC,YAAY,KAAQ,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBACzD,KAAM,CAAAC,kBAAkB,CAAG,CACvBC,OAAO,CAAGC,KAAK,EAAKH,IAAA,CAACF,YAAY,CAAAM,MAAA,CAAAC,MAAA,IAAKF,KAAK,CAAE,CAAC,CAC9CG,KAAK,CAAGH,KAAK,EAAKH,IAAA,CAACJ,UAAU,CAAAQ,MAAA,CAAAC,MAAA,IAAKF,KAAK,CAAE,CAAC,CAC1CI,IAAI,CAAGJ,KAAK,EAAKH,IAAA,CAACH,SAAS,CAAAO,MAAA,CAAAC,MAAA,IAAKF,KAAK,CAAE,CAC3C,CAAC,CACD,QAAS,CAAAK,eAAeA,CAAC,CAAEC,IAAI,CAAEC,OAAO,CAAEC,MAAM,CAAEC,SAAS,CAAEC,IAAI,CAAEC,IAAK,CAAC,CAAE,CACvE,KAAM,CAAEC,KAAK,CAAEC,KAAM,CAAC,CAAGP,IAAI,CAC7B,KAAM,CAAEQ,IAAI,CAAEC,OAAO,CAAEC,UAAU,CAAEC,UAAU,CAAEC,QAAQ,CAAElB,KAAM,CAAC,CAAGO,OAAO,CAC1E,KAAM,CAAAY,WAAW,CAAAlB,MAAA,CAAAC,MAAA,IACVJ,kBAAkB,CAClBU,MAAM,CACZ,CACD,KAAM,CAAAY,cAAc,CAAGD,WAAW,CAACL,IAAI,CAAC,CACxC,GAAI,CAACM,cAAc,CAAE,CACjB,KAAM,IAAI,CAAAC,KAAK,CAAC,gBAAgBP,IAAI,0KAA0K,CAAC,CACnN,CACA,MAAO,CAAAM,cAAc,CAAC,CAClBF,QAAQ,CACRJ,IAAI,CACJL,SAAS,CACTG,KAAK,CACLC,KAAK,CACLG,UAAU,CACVC,UAAU,CACVP,IAAI,CACJC,IAAI,CACJI,OAAO,CACPf,KACJ,CAAC,CAAC,CACN,CACA,MAAO,SAAS,CAAAsB,OAAOA,CAACtB,KAAK,CAAE,CAC3B,KAAM,CAAES,SAAS,CAAEF,OAAO,CAAEI,IAAK,CAAC,CAAGX,KAAK,CAC1C,KAAM,CAAEkB,QAAQ,CAAEK,SAAS,CAAEC,YAAY,CAAEC,cAAc,CAAEC,aAAa,CAAEC,SAAU,CAAC,CAAGpB,OAAO,CAC/F,MAAQ,CAAAV,IAAA,CAACL,iBAAiB,EAACiB,SAAS,CAAEA,SAAU,CAACS,QAAQ,CAAEA,QAAS,CAACK,SAAS,CAAEA,SAAU,CAACC,YAAY,CAAEA,YAAa,CAACC,cAAc,CAAEA,cAAe,CAACC,aAAa,CAAEA,aAAc,CAACC,SAAS,CAAEA,SAAU,CAACC,MAAM,CAAEjB,IAAK,CAAAkB,QAAA,CACrNxB,eAAe,CAACL,KAAK,CAAC,CACN,CAAC,CACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}