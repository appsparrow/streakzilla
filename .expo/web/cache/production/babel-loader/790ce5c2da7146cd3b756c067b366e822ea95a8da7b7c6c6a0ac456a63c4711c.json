{"ast":null,"code":"import React from'react';import Keyboard from\"react-native-web/dist/exports/Keyboard\";import{isIOS}from'../utils/platform';export function useKeyboard(){const[keyboardHeight,setKeyboardHeight]=React.useState(0);const[isKeyboardVisible,setIsKeyboardVisible]=React.useState(false);const onShow=React.useCallback(event=>{const{height}=event.endCoordinates;setKeyboardHeight(height);setIsKeyboardVisible(true);},[]);const onHide=React.useCallback(()=>{setKeyboardHeight(0);setIsKeyboardVisible(false);},[]);React.useEffect(()=>{if(!isIOS()){return()=>{};}const didShowListener=Keyboard.addListener('keyboardDidShow',onShow);const didHideListener=Keyboard.addListener('keyboardDidHide',onHide);return()=>{didShowListener.remove();didHideListener.remove();};},[onHide,onShow]);return{keyboardHeight,isKeyboardVisible};}","map":{"version":3,"names":["React","Keyboard","isIOS","useKeyboard","keyboardHeight","setKeyboardHeight","useState","isKeyboardVisible","setIsKeyboardVisible","onShow","useCallback","event","height","endCoordinates","onHide","useEffect","didShowListener","addListener","didHideListener","remove"],"sources":["/Users/siva/Documents/GitHub/streakzilla/streakzilla/node_modules/react-native-toast-message/lib/src/hooks/useKeyboard.js"],"sourcesContent":["import React from 'react';\nimport { Keyboard } from 'react-native';\nimport { isIOS } from '../utils/platform';\nexport function useKeyboard() {\n    const [keyboardHeight, setKeyboardHeight] = React.useState(0);\n    const [isKeyboardVisible, setIsKeyboardVisible] = React.useState(false);\n    const onShow = React.useCallback((event) => {\n        const { height } = event.endCoordinates;\n        setKeyboardHeight(height);\n        setIsKeyboardVisible(true);\n    }, []);\n    const onHide = React.useCallback(() => {\n        setKeyboardHeight(0);\n        setIsKeyboardVisible(false);\n    }, []);\n    React.useEffect(() => {\n        if (!isIOS()) {\n            return () => { };\n        }\n        const didShowListener = Keyboard.addListener('keyboardDidShow', onShow);\n        const didHideListener = Keyboard.addListener('keyboardDidHide', onHide);\n        return () => {\n            didShowListener.remove();\n            didHideListener.remove();\n        };\n    }, [onHide, onShow]);\n    return {\n        keyboardHeight,\n        isKeyboardVisible\n    };\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,QAAA,8CAE1B,OAASC,KAAK,KAAQ,mBAAmB,CACzC,MAAO,SAAS,CAAAC,WAAWA,CAAA,CAAG,CAC1B,KAAM,CAACC,cAAc,CAAEC,iBAAiB,CAAC,CAAGL,KAAK,CAACM,QAAQ,CAAC,CAAC,CAAC,CAC7D,KAAM,CAACC,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGR,KAAK,CAACM,QAAQ,CAAC,KAAK,CAAC,CACvE,KAAM,CAAAG,MAAM,CAAGT,KAAK,CAACU,WAAW,CAAEC,KAAK,EAAK,CACxC,KAAM,CAAEC,MAAO,CAAC,CAAGD,KAAK,CAACE,cAAc,CACvCR,iBAAiB,CAACO,MAAM,CAAC,CACzBJ,oBAAoB,CAAC,IAAI,CAAC,CAC9B,CAAC,CAAE,EAAE,CAAC,CACN,KAAM,CAAAM,MAAM,CAAGd,KAAK,CAACU,WAAW,CAAC,IAAM,CACnCL,iBAAiB,CAAC,CAAC,CAAC,CACpBG,oBAAoB,CAAC,KAAK,CAAC,CAC/B,CAAC,CAAE,EAAE,CAAC,CACNR,KAAK,CAACe,SAAS,CAAC,IAAM,CAClB,GAAI,CAACb,KAAK,CAAC,CAAC,CAAE,CACV,MAAO,IAAM,CAAE,CAAC,CACpB,CACA,KAAM,CAAAc,eAAe,CAAGf,QAAQ,CAACgB,WAAW,CAAC,iBAAiB,CAAER,MAAM,CAAC,CACvE,KAAM,CAAAS,eAAe,CAAGjB,QAAQ,CAACgB,WAAW,CAAC,iBAAiB,CAAEH,MAAM,CAAC,CACvE,MAAO,IAAM,CACTE,eAAe,CAACG,MAAM,CAAC,CAAC,CACxBD,eAAe,CAACC,MAAM,CAAC,CAAC,CAC5B,CAAC,CACL,CAAC,CAAE,CAACL,MAAM,CAAEL,MAAM,CAAC,CAAC,CACpB,MAAO,CACHL,cAAc,CACdG,iBACJ,CAAC,CACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}