{"version":3,"file":"static/js/main.67d2ea3f.js","mappings":"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","sources":["lib/supabase.ts","context/AuthContext.tsx","components/ui/LoadingSpinner.tsx","screens/LoginScreen.tsx","screens/SignupScreen.tsx","screens/HomeScreen.tsx","screens/CreateStreakScreen.tsx","screens/JoinStreakScreen.tsx","screens/StreakDashboardScreen.tsx","screens/ProfileScreen.tsx","App.tsx","index.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\nimport { Database } from './database.types';\n\nconst supabaseUrl = 'https://sbxowcfafuwkzxeaspvq.supabase.co';\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNieG93Y2ZhZnV3a3p4ZWFzcHZxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5OTU4NTEsImV4cCI6MjA3MzU3MTg1MX0.tMR6wSNdaGM5Epvu5h2HiAY00kodUwbnwEGaqjPKQsA';\n\nexport const supabase = createClient<Database>(supabaseUrl, supabaseKey, {\n  auth: {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n  },\n});\n\n// Auth helper functions\nexport const auth = {\n  signUp: async (email: string, password: string, metadata?: { first_name?: string; last_name?: string }) => {\n    return await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: metadata,\n      },\n    });\n  },\n\n  signIn: async (email: string, password: string) => {\n    return await supabase.auth.signInWithPassword({\n      email,\n      password,\n    });\n  },\n\n  signOut: async () => {\n    return await supabase.auth.signOut();\n  },\n\n  getUser: async () => {\n    return await supabase.auth.getUser();\n  },\n\n  getSession: async () => {\n    return await supabase.auth.getSession();\n  },\n};\n","import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { User, Session } from '@supabase/supabase-js';\nimport { supabase } from '../lib/supabase';\nimport { Database } from '../lib/database.types';\n\ntype Profile = Database['public']['Tables']['profiles']['Row'];\n\ninterface AuthContextType {\n  user: User | null;\n  profile: Profile | null;\n  session: Session | null;\n  loading: boolean;\n  signUp: (email: string, password: string, metadata?: { first_name?: string; last_name?: string }) => Promise<any>;\n  signIn: (email: string, password: string) => Promise<any>;\n  signOut: () => Promise<void>;\n  updateProfile: (updates: Partial<Profile>) => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [profile, setProfile] = useState<Profile | null>(null);\n  const [session, setSession] = useState<Session | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Get initial session\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setSession(session);\n      setUser(session?.user ?? null);\n      if (session?.user) {\n        loadProfile(session.user.id);\n      }\n      setLoading(false);\n    });\n\n    // Listen for auth changes\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange(async (event, session) => {\n      setSession(session);\n      setUser(session?.user ?? null);\n      \n      if (event === 'SIGNED_IN' && session?.user) {\n        await loadProfile(session.user.id);\n      } else if (event === 'SIGNED_OUT') {\n        setProfile(null);\n      }\n      \n      setLoading(false);\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const loadProfile = async (userId: string) => {\n    try {\n      const { data, error } = await supabase\n        .from('profiles')\n        .select('*')\n        .eq('id', userId)\n        .single();\n\n      if (error && error.code !== 'PGRST116') {\n        console.error('Error loading profile:', error);\n        return;\n      }\n\n      if (data) {\n        setProfile(data);\n      } else {\n        // Create profile if it doesn't exist\n        const newProfile = {\n          id: userId,\n          first_name: user?.user_metadata?.first_name || null,\n          last_name: user?.user_metadata?.last_name || null,\n          display_name: null,\n          avatar_url: null,\n          phone: null,\n          subscription_status: 'free',\n        };\n\n        const { data: createdProfile, error: createError } = await supabase\n          .from('profiles')\n          .insert(newProfile)\n          .select()\n          .single();\n\n        if (createError) {\n          console.error('Error creating profile:', createError);\n        } else {\n          setProfile(createdProfile);\n        }\n      }\n    } catch (error) {\n      console.error('Error in loadProfile:', error);\n    }\n  };\n\n  const signUp = async (email: string, password: string, metadata?: { first_name?: string; last_name?: string }) => {\n    const { data, error } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: metadata,\n      },\n    });\n    return { data, error };\n  };\n\n  const signIn = async (email: string, password: string) => {\n    const { data, error } = await supabase.auth.signInWithPassword({\n      email,\n      password,\n    });\n    return { data, error };\n  };\n\n  const signOut = async () => {\n    const { error } = await supabase.auth.signOut();\n    if (error) throw error;\n  };\n\n  const updateProfile = async (updates: Partial<Profile>) => {\n    if (!user) throw new Error('No user logged in');\n\n    const { error } = await supabase\n      .from('profiles')\n      .update(updates)\n      .eq('id', user.id);\n\n    if (error) throw error;\n\n    setProfile(prev => prev ? { ...prev, ...updates } : null);\n  };\n\n  const value = {\n    user,\n    profile,\n    session,\n    loading,\n    signUp,\n    signIn,\n    signOut,\n    updateProfile,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n","import React from 'react';\nimport { View, ActivityIndicator, ViewStyle } from 'react-native';\n\ninterface LoadingSpinnerProps {\n  size?: 'small' | 'large';\n  color?: string;\n  style?: ViewStyle;\n}\n\nexport function LoadingSpinner({ \n  size = 'large', \n  color = '#f37d0a',\n  style \n}: LoadingSpinnerProps) {\n  return (\n    <View \n      className=\"flex-1 justify-center items-center bg-gray-50\"\n      style={style}\n    >\n      <ActivityIndicator size={size} color={color} />\n    </View>\n  );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../App';\n\ntype LoginScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'Login'>;\n\ninterface Props {\n  navigation: LoginScreenNavigationProp;\n}\n\nexport default function LoginScreen({ navigation }: Props) {\n  return (\n    <View className=\"flex-1 justify-center items-center bg-gray-50\">\n      <Text className=\"text-2xl font-bold text-gray-900 mb-4\">Welcome to Streakzilla!</Text>\n      <Text className=\"text-gray-600\">Login screen coming soon...</Text>\n    </View>\n  );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../App';\n\ntype SignupScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'Signup'>;\n\ninterface Props {\n  navigation: SignupScreenNavigationProp;\n}\n\nexport default function SignupScreen({ navigation }: Props) {\n  return (\n    <View className=\"flex-1 justify-center items-center bg-gray-50\">\n      <Text className=\"text-2xl font-bold text-gray-900 mb-4\">Sign Up</Text>\n      <Text className=\"text-gray-600\">Signup screen coming soon...</Text>\n    </View>\n  );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../App';\n\ntype HomeScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'Home'>;\n\ninterface Props {\n  navigation: HomeScreenNavigationProp;\n}\n\nexport default function HomeScreen({ navigation }: Props) {\n  return (\n    <View className=\"flex-1 justify-center items-center bg-gray-50\">\n      <Text className=\"text-2xl font-bold text-gray-900 mb-4\">Streakzilla</Text>\n      <Text className=\"text-gray-600\">Home screen coming soon...</Text>\n    </View>\n  );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../App';\n\ntype CreateStreakScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'CreateStreak'>;\n\ninterface Props {\n  navigation: CreateStreakScreenNavigationProp;\n}\n\nexport default function CreateStreakScreen({ navigation }: Props) {\n  return (\n    <View className=\"flex-1 justify-center items-center bg-gray-50\">\n      <Text className=\"text-2xl font-bold text-gray-900 mb-4\">Create Streak</Text>\n      <Text className=\"text-gray-600\">Coming soon...</Text>\n    </View>\n  );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../App';\n\ntype JoinStreakScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'JoinStreak'>;\n\ninterface Props {\n  navigation: JoinStreakScreenNavigationProp;\n}\n\nexport default function JoinStreakScreen({ navigation }: Props) {\n  return (\n    <View className=\"flex-1 justify-center items-center bg-gray-50\">\n      <Text className=\"text-2xl font-bold text-gray-900 mb-4\">Join Streak</Text>\n      <Text className=\"text-gray-600\">Coming soon...</Text>\n    </View>\n  );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RouteProp } from '@react-navigation/native';\nimport { RootStackParamList } from '../App';\n\ntype StreakDashboardScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'StreakDashboard'>;\ntype StreakDashboardScreenRouteProp = RouteProp<RootStackParamList, 'StreakDashboard'>;\n\ninterface Props {\n  navigation: StreakDashboardScreenNavigationProp;\n  route: StreakDashboardScreenRouteProp;\n}\n\nexport default function StreakDashboardScreen({ navigation, route }: Props) {\n  const { streakId } = route.params;\n\n  return (\n    <View className=\"flex-1 justify-center items-center bg-gray-50\">\n      <Text className=\"text-2xl font-bold text-gray-900 mb-4\">Streak Dashboard</Text>\n      <Text className=\"text-gray-600\">Streak ID: {streakId}</Text>\n      <Text className=\"text-gray-600\">Coming soon...</Text>\n    </View>\n  );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../App';\n\ntype ProfileScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'Profile'>;\n\ninterface Props {\n  navigation: ProfileScreenNavigationProp;\n}\n\nexport default function ProfileScreen({ navigation }: Props) {\n  return (\n    <View className=\"flex-1 justify-center items-center bg-gray-50\">\n      <Text className=\"text-2xl font-bold text-gray-900 mb-4\">Profile</Text>\n      <Text className=\"text-gray-600\">Coming soon...</Text>\n    </View>\n  );\n}\n","import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Toast from 'react-native-toast-message';\nimport { AuthProvider, useAuth } from './context/AuthContext';\nimport { LoadingSpinner } from './components/ui/LoadingSpinner';\n\n// Screens\nimport LoginScreen from './screens/LoginScreen';\nimport SignupScreen from './screens/SignupScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport CreateStreakScreen from './screens/CreateStreakScreen';\nimport JoinStreakScreen from './screens/JoinStreakScreen';\nimport StreakDashboardScreen from './screens/StreakDashboardScreen';\nimport ProfileScreen from './screens/ProfileScreen';\n\nexport type RootStackParamList = {\n  Login: undefined;\n  Signup: undefined;\n  Home: undefined;\n  CreateStreak: undefined;\n  JoinStreak: undefined;\n  StreakDashboard: { streakId: string };\n  Profile: undefined;\n};\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction AuthStack() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        animation: 'slide_from_right',\n      }}\n    >\n      <Stack.Screen name=\"Login\" component={LoginScreen} />\n      <Stack.Screen name=\"Signup\" component={SignupScreen} />\n    </Stack.Navigator>\n  );\n}\n\nfunction AppStack() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: '#ffffff',\n        },\n        headerTintColor: '#374151',\n        headerTitleStyle: {\n          fontWeight: '600',\n        },\n        animation: 'slide_from_right',\n      }}\n    >\n      <Stack.Screen \n        name=\"Home\" \n        component={HomeScreen}\n        options={{ title: 'Streakzilla' }}\n      />\n      <Stack.Screen \n        name=\"CreateStreak\" \n        component={CreateStreakScreen}\n        options={{ title: 'Create Streak' }}\n      />\n      <Stack.Screen \n        name=\"JoinStreak\" \n        component={JoinStreakScreen}\n        options={{ title: 'Join Streak' }}\n      />\n      <Stack.Screen \n        name=\"StreakDashboard\" \n        component={StreakDashboardScreen}\n        options={{ title: 'Streak Dashboard' }}\n      />\n      <Stack.Screen \n        name=\"Profile\" \n        component={ProfileScreen}\n        options={{ title: 'Profile' }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction Navigation() {\n  const { user, loading } = useAuth();\n\n  if (loading) {\n    return <LoadingSpinner />;\n  }\n\n  return (\n    <NavigationContainer>\n      {user ? <AppStack /> : <AuthStack />}\n    </NavigationContainer>\n  );\n}\n\nexport default function App() {\n  return (\n    <AuthProvider>\n      <Navigation />\n      <StatusBar style=\"auto\" />\n      <Toast />\n    </AuthProvider>\n  );\n}\n","import { registerRootComponent } from 'expo';\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [241], () => (__webpack_require__(2852)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["supabase","createClient","auth","autoRefreshToken","persistSession","detectSessionInUrl","AuthContext","createContext","undefined","AuthProvider","children","user","setUser","useState","profile","setProfile","session","setSession","loading","setLoading","useEffect","getSession","then","data","loadProfile","id","subscription","onAuthStateChange","async","event","unsubscribe","error","from","select","eq","userId","single","code","console","newProfile","first_name","user_metadata","last_name","display_name","avatar_url","phone","subscription_status","createdProfile","createError","insert","value","signUp","email","password","metadata","options","signIn","signInWithPassword","signOut","updateProfile","Error","update","updates","prev","Object","assign","_jsx","Provider","LoadingSpinner","size","color","style","_StyledComponent","className","component","View","ActivityIndicator","_NativeWindStyleSheet","create","styles","LoginScreen","navigation","_jsxs","Text","SignupScreen","HomeScreen","CreateStreakScreen","JoinStreakScreen","StreakDashboardScreen","route","streakId","params","ProfileScreen","Stack","createNativeStackNavigator","AuthStack","Navigator","screenOptions","headerShown","animation","Screen","name","AppStack","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","title","Navigation","context","useContext","useAuth","NavigationContainer","registerRootComponent","StatusBar","Toast","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}